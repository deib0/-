{"mappings":"AAAA,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC;AACnC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7B,MAAM,OAAO,GAAG,OAAO,IAAI;IAAC;QAAE,IAAI,EAAE,GAAG;QAAE,GAAG,EAAE,8BAA8B;KAAE;IAAE;QAAE,IAAI,EAAE,GAAG;QAAE,GAAG,EAAE,aAAa;KAAE;CAAC;AAClH,IAAI,SAAS,GAAG,CAAC,CAAC,WAAW,CAAC;AAC9B,IAAI,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA,qCAAmB;AAAnB;AACrB,MAAZ,WAAW,GAAG,CAAC,GAAG,GAAK;IACzB,OAAO,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAC7B,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CACtB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CACnB,OAAO,SAAS,EAAE,CAAC,CAAE,mBAAS;KAAX;CACjB;AACX,gBAAQ;AACA,MAAF,MAAM,GAAG,IAAM;IACjB,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE;IACxC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,GAAK;QAC7B,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,kKAGQ,EAAE,IAAI,CAAC,IAAI,CAAC,qCACd,EAAE,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,+BAE7C,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC;QACxB,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,IAAM;YAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;SACxB,CAAC;QACF,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,GAAK;YAC9B,CAAC,CAAC,eAAe,EAAE;YACnB,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YACxB,MAAM,EAAE;SACX,CAAC;KACL,CAAC;CACL;AACD,MAAM,EAAE;AACR,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,IAAM;IAC9B,IAAI,IAAI,GAAG,MAAM,CAAC,gCAAY,CAAqB;IAC/B,IAAhB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,EAC3B,IAAI,GAAG,UAAU,GAAG,IAAI;IAE5B,OAAO,CAAC,IAAI,CAAC;QAAE,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAAE,GAAG,EAAE,IAAI;KAAE,CAAC;IACvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;IACjB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;IACpB,MAAM,EAAE;CACX,CAAC;AACF,gBAAQ;AACR,MAAM,CAAC,cAAc,GAAG,IAAM;IAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;IACtC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC;CACpC","sources":["src/main.js"],"sourcesContent":["const x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)\r\nconst hashMap = xObject || [{ logo: 'D', url: 'developer.mozilla.org/zh-CN/' }, { logo: 'R', url: 'runoob.com/' }]\r\nlet $siteList = $('.siteList')\r\nlet $lastLi = $siteList.find('li.last')//  选择类名last的li返回元素\r\nconst simplifyUrl = (url) => {  //  简化网址\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '')  //  正则表达式\r\n}\r\n//  渲染函数\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove()\r\n    hashMap.forEach((node, index) => {\r\n        const $li = $(`\r\n        <li><div class=\"site\">\r\n        <div class=\"delete\"><svg class=\"icon\"><use xlink:href=\"#icon-delete\"></use></svg></div>\r\n        <div class=\"site_logo\">${node.logo}</div>\r\n        <p class=\"site_link\">${simplifyUrl(node.url)}</p>\r\n    </div></li>\r\n        `).insertBefore($lastLi)\r\n        $li.on('click', () => {   //  删除功能\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click', '.delete', (e) => {\r\n            e.stopPropagation()\r\n            hashMap.splice(index, 1)\r\n            render()\r\n        })\r\n    })\r\n}\r\nrender()\r\n$('.addButton').on('click', () => {   //  添加网址\r\n    let link = prompt('请问你要添加什么网址')\r\n    if (link.indexOf('http') === -1) {\r\n        link = 'https://' + link\r\n    }\r\n    hashMap.push({ logo: simplifyUrl(link)[0], url: link })\r\n    console.log(link)\r\n    console.log(hashMap)\r\n    render()\r\n})\r\n//  储存信息\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)\r\n    localStorage.setItem('x', string)\r\n}\r\n\r\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}